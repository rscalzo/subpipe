{% extends "smt_base.html" %} 
{% load trans_tags %}

{% block htmlhead %}
<!--[if lte IE 8]><script language="javascript" type="text/javascript" src="{{STATIC_URL}}js/flot/excanvas.min.js"></script><![endif]-->
<script type="text/javascript" src="{{STATIC_URL}}js/jquery.js"></script>
<script type="text/javascript" src="{{STATIC_URL}}js/flot/jquery.flot.js"></script>
<script type="text/javascript" src="{{STATIC_URL}}js/flot/jquery.flot.errorbars.js"></script>
<script type="text/javascript" src="{{STATIC_URL}}js/flot/jquery.flot.axislabels.js"></script>
<script type="text/javascript" src="{{STATIC_URL}}js/flot/jquery.flot.symbol2.js"></script>
{% endblock %}

{% block naviheader2 %}
<div class='navileft'>
  {% with trans.pointing_det.all.reverse.0.night.ut_date as lastdate %}
  <a href="{% url trans_date lastdate.year lastdate.month lastdate.day %}">Go
    to {{lastdate|date:"Y-m-d"}}</a>
  {% endwith %}
  {% if prevtrans %} &nbsp;&nbsp;&nbsp;&nbsp;
  <a href="{% url trans_info prevtrans %}">Go
    to previous transient ({{prevtrans}})</a> {% endif %}
  {% if nexttrans %} &nbsp;&nbsp;&nbsp;&nbsp;
  <a href="{% url trans_info nexttrans %}">Go
    to next transient ({{nexttrans}})</a> {% endif %} 
</div>
{% endblock %}


{% block content %}

  
  <div id="pagecontent">
    <div id="user_input">
      <p>This transient is currently classified as: {{trans.type.type}}
      <p>Use the form below to change its type.
      <p><form name=userinput method=POST action="">{% csrf_token %}
	  {% for objtype in trans_types %}
	  <input type=radio name=user_type value={{objtype.type}}
		 {% if objtype.type == trans.type.type %} checked {% endif %}>{{objtype.type}}
          </input>
	  {% endfor %}
	  <input type=radio name=user_type value='other'>other</input>
	  <input type=text name=user_type_custom size=10 maxlength=10 value=''></input>
	  <br>
	  Additional comment ?(no more than 100 characters please):
	  <br>
          <input type=text name=user_comment size=100 maxlength=100
		 value=''></input>
	  <br>
          <input type=submit name=submit value="Submit">
	</form>
    </div>
        
    <div id="smt_info" class="clearfix">
      
      <h3>Information from SMT database</h3>
      <p>Select the filters you want to plot. Click data point in the figure to
	view thumbnails and other details.

	<div id="lcplot"></div>

	<div id="lc_lc">
	  <div id="lc_legend"></div>
	
	  <div id="lc_choices"><p id="choices">Select filters for display:</p></div>
	</div>

	<div id="lc_thumbs">
	  <img id="thumb_new" class="thumbnail" src="" alt="thumb_new" />
	  <img id="thumb_ref" class="thumbnail" src="" alt="thumb_ref" />
	  <img id="thumb_diff" class="thumbnail" src="" alt="thumb_diff" />
	</div>
	
	<div id="lc_details">
	  <table>
	    {% for lc_key in lc_keys %}
	    <tr><td>{{lc_key}}</td><td class="{{lc_key}}"></td></tr>
	    {% endfor %}
	  </table>
	</div>  
    </div>

  <div id="description">
    <p>Name&nbsp;:&nbsp;{{trans.name}} 
      <br>J2000&nbsp;:&nbsp;{{trans.ra|as_sixty:"hour"}}&nbsp;&nbsp;&nbsp;&nbsp;{{trans.dec|as_sixty:"degree"}}
      &nbsp;&nbsp;&nbsp;&nbsp;({{trans.ra|floatformat:5}}&nbsp;,&nbsp;{{trans.dec|floatformat:5}})
      <br>First detected on {{trans.pointing_det.all.0.night.ut_date}}.
      <br>Last detected on {{trans.pointing_det.all.reverse.0.night.ut_date}}.
      <br>Has {{trans.n_det}} detections.
      <br>This field was last observed on {{trans.pointing_obs.all.reverse.0.night.ut_date}}.
      {% if changes %}
      <ul>Transient History:
	{% for change in changes %}
	<li>{{change.time}}: <font color='#AA0078'>{{change.user}}</font> thinks it is a <font color='#AA0078'>{{change.type.type}}</font>.
	  {% if change.comment|length > 0 %}
	  ({{change.comment}})
	  {% endif %}
	</li>
	{% endfor %}
      </ul>
      {% endif %}
 </div>

    <div id="external_info">
      <h3>Information from external catalog to help classify the transient</h3>
      <form name=twomassget method=get target="_new" action="http://irsa.ipac.caltech.edu/cgi-bin/2MASS/IM/nph-im_pos">
	<input type="hidden" name=type value="at">
	<input type="hidden" name=ds value="asky">
	<input type="hidden" name=POS value="{{trans.ra}} {{trans.dec}}">
	<input type="hidden" name=subsz value="396">
	<input type="submit" value="Check 2MASS">
	<input type="hidden" name=date value="">
	<input type="hidden" name=scan value="">
	<input type="hidden" name=coadd value="">
	<input type="hidden" name=key value="">
	<input type="hidden" name=band value="A">
      </form>
      <br>
      <!--<a target="_blank"
	 href= "http://simbad.u-strasbg.fr/simbad/sim-coo?output.format=HTML&Coord={{trans.ra}}{% if trans.dec >= 0 %}%2B{% endif %}{{trans.dec}}&CooEpoch=2000&CooEqui=2000&Radius=0.01&Radius.unit=deg&CooFrame=FK5">
	Check SIMBAD objects</a>-->
      <a target="_blank"
	 href= "http://nedwww.ipac.caltech.edu/cgi-bin/objsearch?search_type=Near+Position+Search&in_csys=Equatorial&in_equinox=J2000.0&ra={{trans.ra}}&dec={{trans.dec}}&radius=1.0&obj_sort=Distance+to+search+center&img_stamp=Yes">
      Check NED for nearby objects</a>
      <br>
      SDSS
      <img src="http://skyservice.pha.jhu.edu/DR10/ImgCutout/getjpeg.aspx?ra={{trans.ra}}&dec={{trans.dec}}&scale=0.3&width=200&height=200&opt=GL&query=G"/>
      DSS
      <img width=200px src="http://archive.stsci.edu/cgi-bin/dss_search?f=gif&v=poss2ukstu_red&r={{trans.ra}}&d={{trans.dec}}&e=J2000&h=1.0&w=1.0&c=none"/>
    </div>
</div>

<script type="text/javascript">
$(function () {
	var datasets = {{lcjson|safe}};
	
	//define colors 
	var data_colors={"v":"#0000A0","g":"#008000","r":"#CC0000","i":"#FFA500","v_lim":"#0000A0","g_lim":"#008000","r_lim":"#CC0000","i_lim":"#FFA500"};
        var data_symbol={"v":"square","g":"triangle","r":"diamond","i":"cross","v_lim":"uparrow","g_lim":"uparrow","r_lim":"uparrow","i_lim":"uparrow"};
	
	//set color and symbol
	$.each(datasets, function(key, val) {
		if (key && data_colors[key]) {
		    val.color=data_colors[key];
                    val.points={"symbol":data_symbol[key]};
		} else {
                    val.color="#000000";
                    val.points={"symbol":"circle"};
                }
            });
	
        //figure out plotting range in y
        var uppermags=[];
        var lowermags=[];
        $.each(datasets, function(key, val) {
		for (var i=0 ; i< val.data.length ; i++){
		    uppermags.push(val.data[i][1]+val.data[i][2]);
		    lowermags.push(val.data[i][1]-val.data[i][2]);
		}
	    });	    
	var ymax=Math.max.apply(Math,uppermags)+0.1;
        var ymin=Math.min.apply(Math,lowermags)-0.1;
	
        //set plot options
        var flotoptions = {
            series: {
                points: {
                    show: true, fill: 1, fillColor:false, radius:3,
                    errorbars: "y", 
                    yerr: {show:true, upperCap: "-", lowerCap: "-", radius: 3}                
                }
            },
            grid: { hoverable: true, clickable: true },
            yaxis: { 
	        min:ymin, max:ymax,
                axisLabel: "Mag", position :"left",
                color:"#000000", tickDecimals:1,
                transform: function (v) { return -v; },
                inverseTransform: function (v) { return -v; }
            },
            xaxis: {
                axisLabel: "MJD",
                autoscaleMargin:0.1, color:"#000000", tickDecimals:1 
            },
            legend:{
                container: "#lc_legend"
            }
        };
	
	// insert checkboxes 
	var choiceContainer = $("#choices");
	$.each(datasets, function(key, val) {
		choiceContainer.append('<br/><input type="checkbox" name="' + key +
				       '" checked="checked" id="id' + key + '">' +
				       '<label for="id' + key + '">'
				       + val.label + '</label>');
	    });
	choiceContainer.find("input").click(plotAccordingToChoices);
	
	var firstkey = null;
	
	//plot checked
	function plotAccordingToChoices() {
	    var data = [];
	    var plot = [];

	    choiceContainer.find("input:checked").each(function () {
		    var key = $(this).attr("name");
		    if (key && datasets[key]) {
			if (firstkey == null) {firstkey = key;}
			else {
			if (datasets[key]['jd_obs'][datasets[key]['jd_obs'].length-1] > datasets[firstkey]['jd_obs'][datasets[firstkey]['jd_obs'].length-1])
                            {firstkey=key;}
                        }
                    data.push(datasets[key]);
		    }
		});
	    
	    if (data.length > 0)
		plot=$.plot($("#lcplot"), data, flotoptions);
            return plot;
	}
	
	plot = plotAccordingToChoices();
	
        //hover and click
        function showTooltip(x, y, contents) {
            $('<div id="tooltip">' + contents + '</div>').css( {
		    position: 'absolute',
			display: 'none',
			top: y + 5,
			left: x + 5,
			border: '1px solid #fdd',
			padding: '2px',
			'background-color': '#fee',
			opacity: 0.80
			}).appendTo("body").fadeIn(200);
        }
	
        var previousPoint = null;
        $("#lcplot").bind("plothover", function (event, pos, item) {
		$("#x").text(pos.x.toFixed(2));
		$("#y").text(pos.y.toFixed(2));
		
		if (item) {
		    if (previousPoint != item.dataIndex) {
			previousPoint = item.dataIndex;
			
			$("#tooltip").remove();
			var x = item.datapoint[0].toFixed(2),
			    y = item.datapoint[1].toFixed(2),
			    yerr= item.datapoint[2].toFixed(2);
			
			showTooltip(item.pageX, item.pageY,
				    "FILTER:"+item.series.label + " MJD:" + x + " MAG:" +
				    y+ " +/- " +yerr);
		    }
		}
		else {
		    $("#tooltip").remove();
		    previousPoint = null;            
		}
	    });
	
        //click to select data point
        //display thumbs and all lc information
        var tb_keys=[];
        {% for lc_key in lc_keys %}
        tb_keys.push("{{lc_key}}");
        {% endfor %}
	
        //function to fill the appropriate areas
        function fillTransPage (plot, fkey, findex) {
	    $("#thumb_new").attr("src","{{MEDIA_URL}}thumbs/{{trans.name}}/"+datasets[fkey]['thumb_new'][findex]);
	    $("#thumb_ref").attr("src","{{MEDIA_URL}}thumbs/{{trans.name}}/"+datasets[fkey]['thumb_ref'][findex]);
	    $("#thumb_diff").attr("src","{{MEDIA_URL}}thumbs/{{trans.name}}/"+datasets[fkey]['thumb_diff'][findex]);
	    for (var i=0; i< tb_keys.length ; i++) {
		$("td."+tb_keys[i]).text(datasets[fkey][tb_keys[i].toLowerCase()][findex]);
	    }
	    $.each(plot.getData(), function(ii, series) {
	        for (var jj=0; jj< series.data.length; jj++) {
		    if ((series.label == fkey) && ( jj == findex))
		        {plot.highlight(ii,jj);} 
			else
			{plot.unhighlight(ii,jj);}
			};
			})
	}
	    
        //default
        var defaultindex = datasets[firstkey]['runtag'].length-1;
        fillTransPage(plot,firstkey,defaultindex);

        $("#lcplot").bind("plotclick", function (event, pos, item) {
		if (item) {
		    fillTransPage(plot,item.series.label,item.dataIndex);
		}
			     
	    });
    
    });
</script>
 

{% endblock %}

